{{- if .Values.ollama.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
  namespace: {{ .Release.Namespace }}
  labels:
    app: ollama
spec:
  replicas: {{ .Values.ollama.replicas }}
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
    spec:
      containers:
        - name: ollama
          image: "{{ .Values.ollama.image.repository }}:{{ .Values.ollama.image.tag }}"
          imagePullPolicy: {{ .Values.ollama.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.ollama.service.port }}
          resources:
            requests:
              cpu: {{ .Values.ollama.resources.requests.cpu }}
              memory: {{ .Values.ollama.resources.requests.memory }}
            limits:
              cpu: {{ .Values.ollama.resources.limits.cpu }}
              memory: {{ .Values.ollama.resources.limits.memory }}
          volumeMounts:
            - name: ollama-data
              mountPath: /root/.ollama
          command: ["/bin/sh", "-c"]
          args:
            - |
              ollama serve &
              sleep 5
              echo "âš¡ Preloading model {{ .Values.ollama.model.name }}:{{ .Values.ollama.model.tag }} ..."
              ollama pull {{ .Values.ollama.model.name }}:{{ .Values.ollama.model.tag }} || true
              ollama run {{ .Values.ollama.model.name }}:{{ .Values.ollama.model.tag }} --prompt "Hello" || true
              wait
          readinessProbe:
            httpGet:
              path: /api/tags
              port: {{ .Values.ollama.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: ollama-data
          persistentVolumeClaim:
            claimName: ollama-data
{{- end }}
